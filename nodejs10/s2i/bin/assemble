#!/bin/bash
#
# S2I assemble script for the 's2i-maven-java' image.
# The 'assemble' script builds your application source so that it is ready to run.
#
# For more information refer to the documentation:
#	https://github.com/openshift/source-to-image/blob/master/docs/builder_image.md
#

set -e
shopt -u dotglob
DOCROOT="/opt/app"
SHARE="/usr/lib/node_modules"
export JAVA_OPTS="-XX:-UseContainerSupport -Dfile.encoding=UTF8 -XX:+ExitOnOutOfMemoryError"


function sonarqube() {


if [[ "$SONARQUBE_ENABLED" == 1 ]]; then
echo "----> SONARQUBE ACTIVADO."
echo "----> VALIDANDO DATOS DE CONEXION.."

if [[ -z "$SONARQUBE_HOST" ]] || [[ -z "$SONARQUBE_PROJECTKEY" ]] || [[ -z "$SONARQUBE_PROJECTNAME" ]]; then

echo "----> ERROR NO SE ENCONTRARON LAS VARIABLES REQUERIDAS."
echo "----> VERIFIQUE SONARQUBE_HOST, SONARQUBE_PROJECTNAME, SONARQUBE_PROJECTKEY."
exit 1
fi
cd $DOCROOT && \
/opt/sonar/bin/sonar-scanner -Dsonar.projectKey=$SONARQUBE_PROJECTKEY -Dsonar.projectName=$SONARQUBE_PROJECTNAME \
-Dsonar.exclusions=vendor/** -Dsonar.sources=$DOCROOT -Dsonar.host.url=$SONARQUBE_HOST -Dsonar.scm.enabled=false
echo "----> SONARQUBE ANALISIS FINALIZADO!."
else 
echo "----> SONARQUBE DESACTIVADO."
fi


}



if [[ "$1" == "-h" ]]; then
	exec /usr/libexec/s2i/usage
fi


  if [ -d /tmp/artifacts/node_modules ]; then
  echo "---> RESTAURANDO NODE MODULES DESDE CACHE..."
  cp -rf /tmp/artifacts/node_modules $DOCROOT/node_modules
  rm -rf /tmp/artifacts

fi

echo "---> INSTALANDO CODIGO FUENTE..."
cp -rf /tmp/src/.  $DOCROOT/
rm -rf /tmp/src

#### sonarqube function
sonarqube
#####


if [[ ! -z "$NEXUS_NPM_REPO" ]]; then

echo "----> NEXUS_NPM_REPO ENCONTRANDO."
echo "----> SETEANDO COMO REGISTRO POR DEFECTO"

npm config set registry $NEXUS_NPM_REPO

fi

if [[ -f "$DOCROOT/package.json" ]]; then
echo "----> NPM DEPENDENCIAS ENCONTRADO!"
echo "----> INSTALANDO..."
cd $DOCROOT
npm install --verbose
$EXTRA_NPM_COMMAND
echo "----> FIN INSTALACION NPM..."
fi

if [[ -f "$DOCROOT/quasar.conf.js" ]]; then
cd $DOCROOT && quasar build
fi

#######################################
echo "----> COMPLETANDO TAREAS ADICIONALES..."


if [ $(find $DOCROOT/ -iname '.env*' | wc -l) -gt 0 ]; then
echo "----> SE ENCONTRARON ARCHIVOS .env* EN LAS FUENTES - ELIMINANDO POR MOTIVOS DE SEGURIDAD..."
echo "----> --------------------------------------------------------------------------------------------------"
echo "----> NUNCA INCLUYA ARCHIVOS DE CONFIGURACION, CERTIFICADOS, O DATASOURCES ESPECIFICOS PARA CADA AMBIENTE DENTRO DE LAS IMAGENES..."
echo "----> --------------------------------------------------------------------------------------------------"
find $DOCROOT -iname '.env*' -exec rm -rf {} \;
else
#######################################
/usr/libexec/s2i/fix $SHARE
/usr/libexec/s2i/fix $DOCROOT
echo "----> INSTALACION FINALIZADA"
fi
